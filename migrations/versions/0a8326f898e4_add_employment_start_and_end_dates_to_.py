"""Add employment start and end dates to Employee table (fixed)

Revision ID: 0a8326f898e4
Revises: b938e031376d
Create Date: 2025-06-04 08:28:13.032774

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text
from datetime import date # Import date for the default value


# revision identifiers, used by Alembic.
revision = '0a8326f898e4'
down_revision = 'b938e031376d'
branch_labels = None
depends_on = None


def upgrade():
    # Step 1: Add columns as nullable=True temporarily
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employment_start_date', sa.Date(), nullable=True)) # Temporarily nullable=True
        batch_op.add_column(sa.Column('employment_end_date', sa.Date(), nullable=True))

    # Step 2: Populate existing rows with a default employment_start_date
    # (This uses the current date as of migration execution)
    today_str = date.today().isoformat() # Get current date for default
    op.execute(text(f"UPDATE employees SET employment_start_date = '{today_str}' WHERE employment_start_date IS NULL"))

    # Step 3: Alter employment_start_date column to nullable=False
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('employment_start_date', nullable=False, existing_type=sa.Date())


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_column('employment_end_date')
        batch_op.drop_column('employment_start_date')

    # ### end Alembic commands ###
